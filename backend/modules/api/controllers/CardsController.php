<?php
/**
 * Created by PhpStorm.
 * User: shakh
 * Date: 25.04.18
 * Time: 22:30
 */

namespace backend\modules\api\controllers;


use backend\modules\api\models\UserCards;
use common\models\Cards;
use common\models\User;
use Yii;
use yii\web\Response;

class CardsController extends \yii\web\Controller
{
    public $enableCsrfValidation = false;

    private $authkey = null;

    public function actions()
    {

        $this->authkey = Yii::$app->request->post('auth_key');

        if ($this->authkey){

        }

        return parent::actions(); // TODO: Change the autogenerated stub
    }

    public function actionSetmaincard(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $authkey = Yii::$app->request->post('auth_key');
        $cardid = Yii::$app->request->post('card_id');

        if ($authkey && $cardid && strlen($authkey) > 0 && strlen($cardid) > 0){
            $user = User::findByAuthKey($authkey);
            $card = Cards::find()->where(['id' => $cardid, 'status' => 1])->one();
            if ($user && $cardid){
                $usercard = UserCards::findOne(['user_id' => $user->id, 'card_id' => $cardid, 'status' => 1]);
                if ($usercard){
                    $user->profile->main_card = $card->id;
                    if ($user->profile->save()){
                        return [
                           'action' => 'setmaincard',
                           'status' => true,
                           'content' => 'Main card has been successfully changed'
                        ];
                    }
                    else {
                        return [
                            'action' => 'setmaincard',
                            'status' => false,
                            'content' => 'Cannot change main card for this user. Please try again later'
                        ];
                    }
                }
                else {
                    return [
                        'action' => 'setmaincard',
                        'status' => false,
                        'content' => 'This is not this user\'s card'
                    ];
                }
            }
            else {
                return [
                    'action' => 'setmaincard',
                    'status' => false,
                    'content' => 'Couldn\'t find '.($user && !$card ? 'card' : ($card && !$user ? 'user' : 'user and card'))
                ];
            }
        }
    }

    public function actionGetmaincard(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $authkey = Yii::$app->request->post('auth_key');

        if (strlen($authkey) > 10){
            $user = User::findByAuthKey($authkey);
            if ($user){

                if ($user->profile->card){
                    $card = $user->profile->card;
                    //generate key for card -----------------------------

                    $card->public_key = sha1('Shakh'.$card->card->id.$card->card->exp_date.time());
                    $card->save();

                    return [
                        'action' => 'getmaincard',
                        'status' => true,
                        'content' => [
                            'id' => $card->card->id,
                            'bank_id' => $card->card->bank_id,
                            'bank_name' => $card->card->bank->name,
                            'cnumb' => $card->card->number,
                            'cash' => $card->card->cash,
                            'exp_date' => $card->card->exp_date,
                            'phone' => $card->card->phone,
                            'name' => $card->card->name,
                            'key' => $card->public_key,
                        ]
                    ];
                }
                else {
                    if (count($user->cards) > 0){
                        $card = UserCards::find()->where(['user_id' => $user->id, 'status' => 1])->one();

                        $card->public_key = sha1($card->card_id.$card->id.$card->card->exp_date.time());
                        $card->save();

                        return [
                            'action' => 'getmaincard',
                            'status' => true,
                            'content' => [
                                'id' => $card->card->id,
                                'bank_id' => $card->card->bank_id,
                                'bank_name' => $card->card->bank->name,
                                'cnumb' => $card->card->number,
                                'cash' => $card->card->cash,
                                'exp_date' => $card->card->exp_date,
                                'phone' => $card->card->phone,
                                'name' => $card->card->name,
                                'key' => $card->public_key,
                            ]
                        ];
                    }
                    else {
                        return [
                            'action' => 'getmaincard',
                            'status' => false,
                            'content' => 'You haven\'t any card. Please, add card first.'
                        ];
                    }
                }

                //--------------------------------------
            }
            else {
                return [
                    'action' => 'getmaincard',
                    'status' => 'false',
                    'content' => 'Couldn\'t find user. Please, try again later.'
                ];
            }
        }
        else {
            return [
                'action' => 'getmaincard',
                'status' => false,
                'content' => 'Couldn\'t find user. Please, try again later.'
            ];
        }
    }

    public function actionGetcards(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $authkey = Yii::$app->request->post('auth_key');

        if (strlen($authkey) > 10){
            $user = User::findByAuthKey($authkey);

            if ($user){
                $a = [];
                $i = 0;
                foreach ($user->cards as $card){

                    $card->public_key = sha1('Shakh'.$card->card_id.$card->card->exp_date.time());
                    $card->save();
                    $a[$i] = [
                        'id' => $card->card->id,
                        'bank_id' => $card->card->bank_id,
                        'bank_name' => $card->card->bank->name,
                        'cnumb' => $card->card->number,
                        'cash' => $card->card->cash,
                        'exp_date' => $card->card->exp_date,
                        'phone' => $card->card->phone,
                        'name' => $card->card->name,
                        'key' => $card->public_key,
                    ];
                    $i++;
                }

                return [
                    'action' => 'getcards',
                    'status' => true,
                    'content' => $a
                ];
            }
            else {
                return [
                    'action' => 'getcards',
                    'status' => false,
                    'content' => 'Неудается найти пользователя'
                ];
            }
        }
        else {
            return [
                'action' => 'getcards',
                'statuc' => false,
                'content' => 'Вы не туда попали'
            ];
        }
    }
}