<?php
/**
 * Created by PhpStorm.
 * User: shakh
 * Date: 25.04.18
 * Time: 22:30
 */

namespace backend\modules\api\controllers;


use backend\modules\api\models\Trans;
use backend\modules\api\models\UserCards;
use common\models\Cards;
use common\models\Terminal;
use common\models\User;
use Yii;
use yii\web\Response;

class CardsController extends \yii\web\Controller
{
    public $enableCsrfValidation = false;

    private $authkey = null;

    public function actions()
    {

        $this->authkey = Yii::$app->request->post('auth_key');

        if ($this->authkey){

        }

        return parent::actions(); // TODO: Change the autogenerated stub
    }

    public function actionSetmaincard(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $authkey = Yii::$app->request->post('auth_key');
        $cardid = Yii::$app->request->post('card_id');

        if ($authkey && $cardid && strlen($authkey) > 0 && strlen($cardid) > 0){
            $user = User::findByAuthKey($authkey);
            $card = Cards::find()->where(['id' => $cardid, 'status' => 1])->one();
            if ($user && $cardid){
                $usercard = UserCards::findOne(['user_id' => $user->id, 'card_id' => $cardid, 'status' => 1]);
                if ($usercard){
                    $user->profile->main_card = $card->id;
                    if ($user->profile->save()){
                        return [
                           'action' => 'setmaincard',
                           'status' => true,
                           'content' => 'Main card has been successfully changed'
                        ];
                    }
                    else {
                        return [
                            'action' => 'setmaincard',
                            'status' => false,
                            'content' => 'Cannot change main card for this user. Please try again later'
                        ];
                    }
                }
                else {
                    return [
                        'action' => 'setmaincard',
                        'status' => false,
                        'content' => 'This is not this user\'s card'
                    ];
                }
            }
            else {
                return [
                    'action' => 'setmaincard',
                    'status' => false,
                    'content' => 'Couldn\'t find '.($user && !$card ? 'card' : ($card && !$user ? 'user' : 'user and card'))
                ];
            }
        }
    }

    public function actionGetmaincard(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $authkey = Yii::$app->request->post('auth_key');

        if (strlen($authkey) > 10){
            $user = User::findByAuthKey($authkey);
            if ($user){

                if ($user->profile->card){
                    $card = $user->profile->card;
                    //generate key for card -----------------------------

                    $card->public_key = sha1('Shakh'.$card->card->id.$card->card->exp_date.time());
                    $card->save();

                    return [
                        'action' => 'getmaincard',
                        'status' => true,
                        'content' => [
                            'id' => $card->card->id,
                            'bank_id' => $card->card->bank_id,
                            'bank_name' => $card->card->bank->name,
                            'cnumb' => $card->card->number,
                            'cash' => $card->card->cash,
                            'exp_date' => $card->card->exp_date,
                            'phone' => $card->card->phone,
                            'name' => $card->card->name,
                            'key' => $card->public_key,
                        ]
                    ];
                }
                else {
                    if (count($user->cards) > 0){
                        $card = UserCards::find()->where(['user_id' => $user->id, 'status' => 1])->one();

                        $card->public_key = sha1($card->card_id.$card->id.$card->card->exp_date.time());
                        $card->save();

                        return [
                            'action' => 'getmaincard',
                            'status' => true,
                            'content' => [
                                'id' => $card->card->id,
                                'bank_id' => $card->card->bank_id,
                                'bank_name' => $card->card->bank->name,
                                'cnumb' => $card->card->number,
                                'cash' => $card->card->cash,
                                'exp_date' => $card->card->exp_date,
                                'phone' => $card->card->phone,
                                'name' => $card->card->name,
                                'key' => $card->public_key,
                            ]
                        ];
                    }
                    else {
                        return [
                            'action' => 'getmaincard',
                            'status' => false,
                            'content' => 'You haven\'t any card. Please, add card first.'
                        ];
                    }
                }

                //--------------------------------------
            }
            else {
                return [
                    'action' => 'getmaincard',
                    'status' => 'false',
                    'content' => 'Couldn\'t find user. Please, try again later.'
                ];
            }
        }
        else {
            return [
                'action' => 'getmaincard',
                'status' => false,
                'content' => 'Couldn\'t find user. Please, try again later.'
            ];
        }
    }

    public function actionGetcards(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $authkey = Yii::$app->request->post('auth_key');

        if (strlen($authkey) > 10){
            $user = User::findByAuthKey($authkey);

            if ($user){
                $a = [];
                $i = 0;
                foreach ($user->cards as $card){

                    //$card->public_key = sha1('Shakh'.$card->card_id.$card->card->exp_date.time());
                    //$card->save();
                    $a[$i] = [
                        'id' => $card->card->id,
                        'bank_id' => $card->card->bank_id,
                        'bank_name' => $card->card->bank->name,
                        'cnumb' => $card->card->number,
                        'cash' => $card->card->cash,
                        'exp_date' => $card->card->exp_date,
                        'phone' => $card->card->phone,
                        'name' => $card->card->name,
                        'key' => $card->public_key,
                    ];
                    $i++;
                }

                return [
                    'action' => 'getcards',
                    'status' => true,
                    'content' => $a
                ];
            }
            else {
                return [
                    'action' => 'getcards',
                    'status' => false,
                    'content' => 'Неудается найти пользователя'
                ];
            }
        }
        else {
            return [
                'action' => 'getcards',
                'statuc' => false,
                'content' => 'Вы не туда попали'
            ];
        }
    }

    public function actionTerminaltransaction(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $auth_key = Yii::$app->request->get("auth_key");
        $auth_key_user = Yii::$app->request->get("user_auth_key");
        $uzs = Yii::$app->request->get("uzs");

        if ($auth_key && $auth_key_user && $uzs){
            $terminal = Terminal::findOne(['auth_key' => $auth_key, 'status' => 1]);
            if ($terminal){
                $user_card = UserCards::findOne(['public_key' => $auth_key_user, 'status' => 1]);
                if ($user_card){
                    $card = Cards::findOne(['id' => $user_card->card_id, 'status' => 1]);

                    if ($card){

                        if ($card->cash >= $uzs){
                            $trans = new Trans();
                            $trans->user_id = $user_card->user_id;
                            $trans->card_id = $user_card->card_id;
                            $trans->terminal_id = $terminal->id;
                            $trans->uzs = $uzs;
                            if ($trans->save()){
                                $card->cash = $card->cash - $uzs;
                                if ($card->save(false)){
                                    $terminal->cash += $uzs;
                                    if ($terminal->save()){
                                        return [
                                            'action' => 'terminaltransaction',
                                            'status' => true,
                                            'content' => 'OK'
                                        ];
                                    }
                                    else {
                                        $trans->delete();
                                        $card->cash += $uzs;
                                        $card->save();
                                        return [
                                            'action' => 'terminaltransaction',
                                            'status' => false,
                                            'content' => 'Terminal error'
                                        ];
                                    }
                                }
                                else {
                                    print_r($card->errors);
                                    $trans->delete();

                                    return [
                                        'action' => 'terminaltransaction',
                                        'status' => false,
                                        'content' => 'Card error'
                                    ];
                                }
                            }
                            else {
                                return [
                                    'action' => 'terminaltransaction',
                                    'status' => false,
                                    'content' => 'Transaction error. Please try again'
                                ];
                            }
                        }
                        else {
                            return [
                               'action' => 'terminaltransaction',
                               'status' => false,
                               'content' => 'Not enough cash'
                            ];
                        }


                    }
                    else {
                        return [
                           'action' => 'terminaltransaction',
                           'status' => false,
                           'content' => 'Card not found'
                        ];
                    }
                }
                else {
                    return [
                        'action' => 'terminaltransaction',
                        'status' => false,
                        'content' => 'User with this card not found'
                    ];
                }
            }
            else {
                return [
                   'action' => 'terminaltransaction',
                   'status' => false,
                   'content' => 'Terminal not found'
                ];
            }
        }
        else
            return [
               'action' => 'terminaltransaction',
               'status' => false,
               'content' => 'Terminal not found'
            ];
    }

    public function actionGethistory(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $auth_key = Yii::$app->request->post("auth_key");

        if (strlen($auth_key) > 10){
            $user = User::findByAuthKey($auth_key);
            if ($user){
                $histories = Trans::find()->where(['user_id' => $user->id, 'status' => 1])->orderBy(['created_at' => SORT_DESC])->all();
                $a = [];
                $i= 0;
                foreach ($histories as $history){
                    $a[$i] = [
                        'id' => $history->id,
                        'user_id' => $history->user_id,
                        'card_id' => $history->card_id,
                        'terminal_id' => $history->terminal_id,
                        'uzs' => $history->uzs,
                        'created_at' => $history->created_at,
                        'username' => $history->user->profile->fullname,
                        'card_number' => $history->card->number,
                        'terminal_name' => $history->terminal->user->profile->fullname
                    ];
                    $i++;
                }

                return [
                    'action' => 'gethistory',
                    'status' => true,
                    'content' => $a
                ];

            }
            else {
                return [
                   'action' => 'gethistory',
                   'status' => false,
                    'content' => 'User not found'
                ];
            }
        }
        else {
            return [
               'action' => 'gethistory',
               'status' => false,
               'content' => 'You\'re not logged in'
            ];
        }

    }
    
    public function actionRemove(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $auth_key = Yii::$app->request->post('auth_key');
        $card_id = Yii::$app->request->post('card_id');

        if (strlen($auth_key) > 10 && strlen($card_id)>0) {
            $user = User::findByAuthKey($auth_key);
            if ($user) {
                $card = Cards::findOne(['id' => $card_id, 'status' => 1]);
                if ($card){
                    $user_card = UserCards::findOne(['user_id' => $user->id, 'card_id' => $card->id]);
                    if ($user_card){
                        $user_card->status = 0;
                        if ($user_card->save()){
                            return [
                               'action' => 'remove',
                               'status' => true,
                               'content' => 'OK'
                            ];
                        }
                        else {
                            return [
                                'action' => 'remove',
                                'status' => false,
                                'content' => 'Something went wrong. Please try again later'
                            ];
                        }
                    }
                    else {
                        return [
                            'action' => 'remove',
                            'status' => false,
                            'content' => 'This is not your card'
                        ];
                    }
                }
                else {
                    return [
                        'action' => 'remove',
                        'status' => false,
                        'content' => 'Card not found'
                    ];
                }
            }
            else {
                return [
                   'action' => 'remove',
                   'status' => false,
                   'content' => 'User not found'
                ];
            }
        }
        else {
            return [
               'action' => 'remove',
               'status' => false,
               'content' => 'You\'re not logged in. Please, login to continue'
            ];
        }
    }

    public function actionAdd(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $auth_key = Yii::$app->request->post("auth_key");
        $card_number = Yii::$app->request->post("card_number");
        $exp_date = Yii::$app->request->post("exp_date");

        $user = User::findByAuthKey($auth_key);
        if ($user){
            $card = Cards::findOne(['number' => $card_number, 'exp_date' => $exp_date, 'status' => 1]);
            if ($card){
                $rand_num = rand(1000, 9999);
                $user_card = new UserCards();
                $user_card->user_id = $user->id;
                $user_card->card_id = $card->id;
                $user_card->public_key = sha1($user->id.$card->id.time()."Shakh");
                $user_card->status = 0;
                $user_card->smstouser = $rand_num;
                if ($user_card->save()){
                    return [
                       'action' => 'add',
                       'status' => true,
                       'content' => $rand_num
                    ];
                }
                else {
                    return [
                       'action' => 'add',
                       'status' => false,
                       'content' => 'Cannot add card. Please, try again later'
                    ];
                }

            }
            else {
                return [
                    'action' => 'add',
                    'status' => false,
                    'content' => 'Card not found'
                ];
            }
        }
        else {
            return [
               'action' => 'add',
               'status' => false,
               'content' => 'User not found'
            ];
        }
    }

    public function actionVerifyadd(){
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $auth_key = Yii::$app->request->post("auth_key");
        $code = Yii::$app->request->post("code");

        $user = User::findByAuthKey($auth_key);
        if ($user){
            $user_card = UserCards::findOne(['user_id' => $user->id, 'smstouser' => $code, 'status' => 0]);
            if ($user_card){
                $user_card->status = 1;
                if ($user_card->save()){
                    return [
                       'action' => 'verifyadd',
                       'status' => true,
                       'content' => 'OK'
                    ];
                }
                else {
                    return [
                        'action' => 'verifyadd',
                        'status' => false,
                        'content' => 'Sorry, error while activating card. Please try again later'
                    ];
                }
            }
            else {
                return [
                   'action' => 'virifyadd',
                   'status' => false,
                   'content' => 'Sorry, there is something wrong. Please, try again later'
                ];
            }
        }
        else {
            return [
                'action' => 'verifyadd',
                'status' => false,
                'content' => 'User not found'
            ];
        }

    }
}